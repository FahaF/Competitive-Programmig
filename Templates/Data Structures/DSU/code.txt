int parent[MAX];
int SIZE[MAX];

int find_set(int v) {
    if (v == parent[v])
        return v;
    return parent[v] = find_set(parent[v]);
}

void make_set(int v) {
    parent[v] = v;
    SIZE[v] = 1;
}

void union_sets(int a, int b) {
    a = find_set(a);
    b = find_set(b);
    if (a != b) {
        if (SIZE[a] < SIZE[b])
            swap(a, b);
        parent[b] = a;
        SIZE[a] += SIZE[b];
    }
}

// Here size[u] is the size of the set in which u is the parent
// for every node v , the size of the set where v 
// belongs is SIZE[find_set(v)]